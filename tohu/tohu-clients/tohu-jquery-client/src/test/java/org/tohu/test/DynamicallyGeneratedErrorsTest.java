package org.tohu.test;

import org.junit.Before;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.tohu.BaseTestFramework;
import org.tohu.IntermediateTestFramework;
import org.tohu.test.enums.BrowserType;

/**
 * List all the test classes you would like to
 * run for the "Acceptance" process.  
 * 
 * The Acceptance process runs all the regression
 * tests for all the browsers configured in the class
 * {@link BaseTestFramework} 
 * @author rb1317
 *
 */
public class DynamicallyGeneratedErrorsTest extends IntermediateTestFramework {

    private static final Logger logger = LoggerFactory.getLogger(DynamicallyGeneratedErrorsTest.class);
      
    public DynamicallyGeneratedErrorsTest(BrowserType browser, String url, String isGUIBusyID) {
        super(browser, url, isGUIBusyID);
    } 
    
    @Before
    public void setUp() throws Exception {
        try {
            openURL(new String[] { "ajaxCall=initialCleanPage" });         
        }catch(Exception ex) {
            logger.error("problem in test setup method for browser: " + super.browser.getBrowserName(), ex);
            throw ex;
        }               
    }
    
    /**
     * test to ensure that any errors generated by the rules engine are picked up by the
     * app. and prevent forward navigation
     *  
     * @throws Exception
     */
    @org.junit.Test
    public void testDynamicallyGeneratedErrors() throws Exception {
        logger.debug("JQueryClientTest.testDynamicallyGeneratedErrors()");
        try {
            // check we are on quesionaire 1
            checkQuestionnaire(
                    "questionnaire1",
                    new String[] { "questionnaire1Style" },
                    "Questionnaire 1",
                    new String[][] { new String[] {"group1", "Group 1"}});
            // navigate forward, as there are no errors
            mouseDownControl("questionnaire1_action_1");            
            // check we are now on page for quesionaire 2
            checkQuestionnaire(
                    "questionnaire2",
                    new String[] { "questionnaire2Style" },
                    "Questionnaire 2",
                    new String[][] { new String[] {"group6", "Group 6"} });
            // navigate back to previous page. The generated xml payload will include an error          
            mouseDownControl("questionnaire2_action_0");
            // check we are back to quesionaire 1
            checkQuestionnaire(
                    "questionnaire1",
                    new String[] { "questionnaire1Style" },
                    "Questionnaire 1",
                    new String[][] { new String[] {"group1", "Group 1"}});          
            // try to navigate forward again
            mouseDownControl("questionnaire1_action_1");
            // check an error alert was generated
            checkAlert("Not all mandatory questions have being answered");          
            // check we are still on the same questionaire
            // because of an existing error
            checkQuestionnaire(
                    "questionnaire1",
                    new String[] { "questionnaire1Style" },
                    "Questionnaire 1",
                    new String[][] { new String[] {"group1", "Group 1"} });         

        }
        catch (Exception ex) {
            handleException("BaseJQueryClientTest.testDynamicallyGeneratedErrors()", ex);
        }       
    }
}
