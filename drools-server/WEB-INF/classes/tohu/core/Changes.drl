/*
 * Copyright 2009 Solnet Solutions Limited (http://www.solnetsolutions.co.nz/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author John Bebbington
 */
package org.tohu

import org.tohu.xml.ChangeCollector;

// Rules for the ChangeCollector.

rule "changesSetup"
no-loop
salience 10000
when
	$c : ChangeCollector(initialised == false)
then
	$c.initialise(drools.getKnowledgeRuntime().getObjects());
	drools.getKnowledgeRuntime().addEventListener($c);
end

rule "changesCleanup"
no-loop
salience -10000
when
	$c : ChangeCollector()
then
	kcontext.getKnowledgeRuntime().removeEventListener($c);
	retract($c);
end
